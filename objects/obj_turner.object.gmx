<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gladiators = ds_priority_create()
copy = ds_priority_create()

turn = noone
turn_number = 0
max_turns = ds_priority_size(gladiators)
global.turn = turn


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (turn.turn_used) {
    event_user(0)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>turn = noone
turn_number = 0
max_turns = ds_priority_size(gladiators)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (turn) {
    my_turn = false
}

if (ds_priority_size(gladiators) != 0) {
    turn = ds_priority_delete_max(gladiators)
} else {
    script_execute(scr_fill_gladiators_queue, gladiators)
    turn = ds_priority_delete_max(gladiators)    
}

with (turn) {
    my_turn = true
}

global.turn = turn
global.selected = turn

ds_priority_copy(copy, gladiators)

with(obj_spell_button) instance_destroy()

scr_create_spell_buttons(turn, 128, 480)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw attack queue

next = ds_priority_find_max(gladiators)

draw_set_font(fnt_small)
for(i = 0; i &lt; ds_priority_size(copy); i++) {
    next = ds_priority_find_max(copy)
    ds_priority_change_priority(copy,next,-1000000)
    draw_set_halign(fa_center)
    if (next.side == FRIENDLY) color = c_green else color = c_red
    draw_outline(next.name, 64 + 128 * i, room_height - 32, color)
    draw_set_halign(fa_left)
    draw_sprite_ext(next.sprite_index, 0, 64 + 128 * i, room_height - 64, 2, 2, 0, c_white, 1)
}

for(i = 0; i &lt; ds_priority_size(copy); i++) {
    gladiator = ds_priority_find_min(copy)
    ds_priority_change_priority(copy, gladiator, gladiator.spd + scr_gladiator_fight_bonuses(gladiator, "spd"))
}

/*
if (ds_priority_size(gladiators) &gt; 0 &amp;&amp; next != noone) {
    draw_set_font(fnt_small)
    draw_text(20, room_height - 40, next.name)
    draw_sprite(next.sprite_index, 0, 20, room_height - 20)
}
*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>min_value = ds_priority_find_min(gladiators).spd

ds_priority_add(gladiators, turn.id, min_value - 1)
with (turn) {
    my_turn = false
}

if (ds_priority_size(gladiators) != 0) {
    turn = ds_priority_delete_max(gladiators)
} else {
    script_execute(scr_fill_gladiators_queue, gladiators)
    turn = ds_priority_delete_max(gladiators)    
}

with (turn) {
    my_turn = true
}
global.selected = turn
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
